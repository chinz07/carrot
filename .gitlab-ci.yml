stages:
- test
- analyze
- deploy

test:arch:clang:release:
  script:
  - "sudo chown -R `whoami`: ."
  - git submodule update --init
  - ls -la
  - export CC=clang
  - export CXX=clang++
  - mkdir build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=Release -DCARROT_BUILD_TESTS=ON -DCARROT_ENABLE_SANITIZERS=ON  ../
  - make
  - ctest  --output-on-failure
  stage: test
  tags:
  - docker
test:arch:gcc:release:
  script:
  - "sudo chown -R `whoami`: ."
  - git submodule update --init
  - ls -la
  - export CC=gcc
  - export CXX=g++
  - mkdir build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=Release -DCARROT_BUILD_TESTS=ON -DCARROT_ENABLE_SANITIZERS=ON ../
  - make
  - ctest --output-on-failure
  stage: test
  tags:
  - docker
test:arch:clang:debug:
  script:
  - "sudo chown -R `whoami`: ."
  - git submodule update --init
  - ls -la
  - export CC=clang
  - export CXX=clang++
  - mkdir build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=Debug -DCARROT_BUILD_TESTS=ON -DCARROT_ENABLE_SANITIZERS=ON ../
  - make
  - ctest  --output-on-failure
  stage: test
  tags:
  - docker
test:arch:gcc:debug:
  script:
  - "sudo chown -R `whoami`: ."
  - git submodule update --init
  - ls -la
  - export CC=gcc
  - export CXX=g++
  - mkdir build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=Debug -DCARROT_BUILD_TESTS=ON -DCARROT_ENABLE_SANITIZERS=ON ../
  - make
  - ctest --output-on-failure
  stage: test
  tags:
  - docker
test:ubuntu:clang:release:
  script:
  - "sudo chown -R `whoami`: ."
  - git submodule update --init
  - ls -la
  - export CC=clang-5.0
  - export CXX=clang++-5.0
  - mkdir build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=Release -DCARROT_BUILD_TESTS=ON ../
  - make
  - ctest  --output-on-failure
  stage: test
  image: localhost:5000/td-quantum/ubuntu-ci
  tags:
  - docker
test:ubuntu:gcc:release:
  script:
  - "sudo chown -R `whoami`: ."
  - git submodule update --init
  - ls -la
  - export CC=gcc
  - export CXX=g++
  - mkdir build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=Release -DCARROT_BUILD_TESTS=ON ../
  - make
  - ctest --output-on-failure
  stage: test
  image: localhost:5000/td-quantum/ubuntu-ci
  tags:
  - docker
test:ubuntu:clang:debug:
  script:
  - "sudo chown -R `whoami`: ."
  - git submodule update --init
  - ls -la
  - export CC=clang-5.0
  - export CXX=clang++-5.0
  - mkdir build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=Debug -DCARROT_BUILD_TESTS=ON ../
  - make
  - ctest  --output-on-failure
  stage: test
  image: localhost:5000/td-quantum/ubuntu-ci
  tags:
  - docker
test:ubuntu:gcc:debug:
  script:
  - "sudo chown -R `whoami`: ."
  - git submodule update --init
  - ls -la
  - export CC=gcc
  - export CXX=g++
  - mkdir build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=Debug -DCARROT_BUILD_TESTS=ON ../
  - make
  - ctest --output-on-failure
  stage: test
  image: localhost:5000/td-quantum/ubuntu-ci
  tags:
  - docker
test:ubuntu-tls:clang:release:
  script:
  - "sudo chown -R `whoami`: ."
  - git submodule update --init
  - ls -ls
  - export CC=clang
  - export CXX=clang++
  - mkdir build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=Release -DCARROT_BUILD_TESTS=ON ../
  - make
  - ctest  --output-on-failure
  stage: test
  image: localhost:5000/td-quantum/ubuntu-lts-ci
  tags:
  - docker
test:ubuntu-tls:gcc:release:
  script:
  - "sudo chown -R `whoami`: ."
  - git submodule update --init
  - ls -la
  - export CC=gcc
  - export CXX=g++
  - mkdir build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=Release -DCARROT_BUILD_TESTS=ON ../
  - make
  - ctest --output-on-failure
  stage: test
  image: localhost:5000/td-quantum/ubuntu-lts-ci
  tags:
  - docker
test:ubuntu-tls:clang:debug:
  script:
  - "sudo chown -R `whoami`: ."
  - git submodule update --init
  - ls -la
  - export CC=clang
  - export CXX=clang++
  - mkdir build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=Debug -DCARROT_BUILD_TESTS=ON ../
  - make
  - ctest  --output-on-failure
  stage: test
  image: localhost:5000/td-quantum/ubuntu-lts-ci
  tags:
  - docker
test:ubuntu-tls:gcc:debug:
  script:
  - "sudo chown -R `whoami`: ."
  - git submodule update --init
  - ls -la
  - export CC=gcc
  - export CXX=g++
  - mkdir build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=Debug -DCARROT_BUILD_TESTS=ON ../
  - make
  - ctest --output-on-failure
  stage: test
  image: localhost:5000/td-quantum/ubuntu-lts-ci
  tags:
  - docker

analyze:coverage:
  script:
  - "sudo chown -R `whoami`: ."
  - git submodule update --init
  - ls -la
  - export CC=gcc
  - export CXX=g++
  - mkdir build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=Debug -DCARROT_BUILD_TESTS=ON -DCARROT_ANALYSE_COVERAGE=ON ../
  - make
  - make coverage
  stage: analyze
  tags:
  - docker

deploy:source_code:
  script:
  - "sudo chown -R `whoami`: ."
  - mkdir build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=Release -DCARROT_VERSION_AFFIX=-dev ../
  - make package_source
  - rsync -az --delete *-src.tar.bz2 *-src.tar.gz *-src.tar.xz *-src.tar.Z ssh-523024-chinz@qubusproject.org:webseiten/carrot/downloads/src
  stage: deploy
  tags:
  - docker
  only:
  - master
  artifacts:
    paths:
    - build/*-src.tar.bz2
    - build/*-src.tar.gz
    - build/*-src.tar.xz
    - build/*-src.tar.Z
    expire_in: 1 day
  dependencies: []

deploy:ubuntu:binary:
  script:
  - "sudo chown -R `whoami`: ."
  - mkdir build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=Release -DCPACK_SYSTEM_NAME=ubuntu -DCARROT_VERSION_AFFIX=-dev ../
  - make package
  - rsync -az --delete *.sh *.tar.gz *.tar.Z ssh-523024-chinz@qubusproject.org:webseiten/carrot/downloads/bin
  stage: deploy
  image: localhost:5000/td-quantum/ubuntu-ci
  tags:
  - docker
  only:
  - master
  artifacts:
    paths:
    - build/*.sh
    - build/*.tar.gz
    - build/*.tar.Z
    expire_in: 1 day
  dependencies: []

deploy:ubuntu-lts:binary:
  script:
  - "sudo chown -R `whoami`: ."
  - mkdir build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=Release -DCPACK_SYSTEM_NAME=ubuntu-lts -DCARROT_VERSION_AFFIX=-dev ../
  - make package
  - rsync -az --delete *.sh *.tar.gz *.tar.Z ssh-523024-chinz@qubusproject.org:webseiten/carrot/downloads/bin
  stage: deploy
  image: localhost:5000/td-quantum/ubuntu-lts-ci
  tags:
  - docker
  only:
  - master
  artifacts:
    paths:
    - build/*.sh
    - build/*.tar.gz
    - build/*.tar.Z
    expire_in: 1 day
  dependencies: []